/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/wheel_elementBase.hpp>
#include <images/BitmapDatabase.hpp>

wheel_elementBase::wheel_elementBase()
{
    setWidth(324);
    setHeight(402);
    shadowTextureMapper.setXY(0, 285);
    shadowTextureMapper.setBitmap(touchgfx::Bitmap(BITMAP_BALL_SHADOW_ID));
    shadowTextureMapper.setWidth(324);
    shadowTextureMapper.setHeight(80);
    shadowTextureMapper.setBitmapPosition(21.5f, 4.0f);
    shadowTextureMapper.setScale(1.0f);
    shadowTextureMapper.setCameraDistance(1000.0f);
    shadowTextureMapper.setOrigo(162.0f, 40.0f, 1000.0f);
    shadowTextureMapper.setCamera(162.0f, 40.0f);
    shadowTextureMapper.setAngles(0.0f, 0.0f, 0.0f);
    shadowTextureMapper.setRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    add(shadowTextureMapper);

    reflectionTextureMapper.setXY(0, 322);
    reflectionTextureMapper.setBitmap(touchgfx::Bitmap(BITMAP_BALL_REFLECT_ID));
    reflectionTextureMapper.setWidth(324);
    reflectionTextureMapper.setHeight(80);
    reflectionTextureMapper.setBitmapPosition(2.0f, 0.0f);
    reflectionTextureMapper.setScale(1.0f);
    reflectionTextureMapper.setCameraDistance(1000.0f);
    reflectionTextureMapper.setOrigo(162.0f, 80.0f, 1000.0f);
    reflectionTextureMapper.setCamera(162.0f, 40.0f);
    reflectionTextureMapper.setAngles(0.0f, 0.0f, 0.0f);
    reflectionTextureMapper.setRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    add(reflectionTextureMapper);

    ballTextureMapper.setXY(0, 0);
    ballTextureMapper.setBitmap(touchgfx::Bitmap(BITMAP_BALL_BIG_ID));
    ballTextureMapper.setWidth(324);
    ballTextureMapper.setHeight(324);
    ballTextureMapper.setBitmapPosition(2.0f, 2.0f);
    ballTextureMapper.setScale(1.0f);
    ballTextureMapper.setCameraDistance(1000.0f);
    ballTextureMapper.setOrigo(162.0f, 162.0f, 1000.0f);
    ballTextureMapper.setCamera(162.0f, 162.0f);
    ballTextureMapper.setAngles(0.0f, 0.0f, 0.0f);
    ballTextureMapper.setRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    add(ballTextureMapper);

    logoTextureMapper.setXY(77, 77);
    logoTextureMapper.setBitmap(touchgfx::Bitmap(BITMAP_ST_FACTORY_00000_ID));
    logoTextureMapper.setWidth(170);
    logoTextureMapper.setHeight(170);
    logoTextureMapper.setBitmapPosition(0.0f, 0.0f);
    logoTextureMapper.setScale(1.0f);
    logoTextureMapper.setCameraDistance(1000.0f);
    logoTextureMapper.setOrigo(85.0f, 85.0f, 1000.0f);
    logoTextureMapper.setCamera(85.0f, 85.0f);
    logoTextureMapper.setAngles(0.0f, 0.0f, 0.0f);
    logoTextureMapper.setRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    add(logoTextureMapper);

    logoAnimatedImage.setXY(77, 77);
    logoAnimatedImage.setUpdateTicksInterval(1);
    logoAnimatedImage.setVisible(false);
    add(logoAnimatedImage);
}

wheel_elementBase::~wheel_elementBase()
{

}

void wheel_elementBase::initialize()
{

}
