/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CUBEUPDOWNBUTTONSCONTAINERBASE_HPP
#define CUBEUPDOWNBUTTONSCONTAINERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class cubeUpDownButtonsContainerBase : public touchgfx::Container
{
public:
    cubeUpDownButtonsContainerBase();
    virtual ~cubeUpDownButtonsContainerBase();
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setUpPressedCallback(touchgfx::GenericCallback<>& callback)
    {
        this->upPressedCallback = &callback;
    }
    void setDownPressedCallback(touchgfx::GenericCallback<>& callback)
    {
        this->downPressedCallback = &callback;
    }
    void setFadeAnimationEndedCallback(touchgfx::GenericCallback<>& callback)
    {
        this->fadeAnimationEndedCallback = &callback;
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitUpPressedCallback()
    {
        if (upPressedCallback && upPressedCallback->isValid())
        {
            this->upPressedCallback->execute();
        }
    }
    virtual void emitDownPressedCallback()
    {
        if (downPressedCallback && downPressedCallback->isValid())
        {
            this->downPressedCallback->execute();
        }
    }
    virtual void emitFadeAnimationEndedCallback()
    {
        if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
        {
            this->fadeAnimationEndedCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::FadeAnimator< touchgfx::Image > background;
    touchgfx::FadeAnimator< touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  > buttonDown;
    touchgfx::FadeAnimator< touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  > buttonUp;

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* upPressedCallback;
    touchgfx::GenericCallback<>* downPressedCallback;
    touchgfx::GenericCallback<>* fadeAnimationEndedCallback;

    /*
     * Callback Declarations
     */
    touchgfx::Callback<cubeUpDownButtonsContainerBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // CUBEUPDOWNBUTTONSCONTAINERBASE_HPP
