/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ROTATINGCOVERFLOWCUSTOMCONTAINERBASE_HPP
#define ROTATINGCOVERFLOWCUSTOMCONTAINERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/AnimationTextureMapper.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>
#include <gui/containers/scrollWheelCoverFlow.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>

class rotatingCoverFlowCustomContainerBase : public touchgfx::Container
{
public:
    rotatingCoverFlowCustomContainerBase();
    virtual ~rotatingCoverFlowCustomContainerBase();
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void close()
    {
        // Override and implement this function in rotatingCoverFlowCustomContainer
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image backgroundImage;
    touchgfx::MoveAnimator< touchgfx::AnimationTextureMapper > backgroundTextureMapper;
    scrollWheelCoverFlow scrollWheelCoverFlow1;
    touchgfx::FadeAnimator< touchgfx::Button > closeCoverFlowButton;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<rotatingCoverFlowCustomContainerBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // ROTATINGCOVERFLOWCUSTOMCONTAINERBASE_HPP
