/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SPHERE_WHEELBASE_HPP
#define SPHERE_WHEELBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <gui/containers/wheel_element.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>

class sphere_wheelBase : public touchgfx::Container
{
public:
    sphere_wheelBase();
    virtual ~sphere_wheelBase();
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setAnimationStartedCallback(touchgfx::GenericCallback<>& callback)
    {
        this->animationStartedCallback = &callback;
    }
    void setAnimationEnddedCallback(touchgfx::GenericCallback<uint16_t>& callback)
    {
        this->animationEnddedCallback = &callback;
    }
    void setItemSelectedCallback(touchgfx::GenericCallback<uint16_t>& callback)
    {
        this->itemSelectedCallback = &callback;
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitAnimationStartedCallback()
    {
        if (animationStartedCallback && animationStartedCallback->isValid())
        {
            this->animationStartedCallback->execute();
        }
    }
    virtual void emitAnimationEnddedCallback(uint16_t value)
    {
        if (animationEnddedCallback && animationEnddedCallback->isValid())
        {
            this->animationEnddedCallback->execute( value);
        }
    }
    virtual void emitItemSelectedCallback(uint16_t value)
    {
        if (itemSelectedCallback && itemSelectedCallback->isValid())
        {
            this->itemSelectedCallback->execute( value);
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::MoveAnimator< wheel_element > wheel_element_4;
    touchgfx::MoveAnimator< wheel_element > wheel_element_3;
    touchgfx::MoveAnimator< wheel_element > wheel_element_2;
    touchgfx::MoveAnimator< wheel_element > wheel_element_1;

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* animationStartedCallback;
    touchgfx::GenericCallback<uint16_t>* animationEnddedCallback;
    touchgfx::GenericCallback<uint16_t>* itemSelectedCallback;

};

#endif // SPHERE_WHEELBASE_HPP
