#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_Gomme_Sans_W04_SemiBold_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0042,  1 },  // (First char = [0x0042, B], Second char = [0x002D, hyphen], Kerning dist = 1)
    { 0x0044,  1 },  // (First char = [0x0044, D], Second char = [0x002D, hyphen], Kerning dist = 1)
    { 0x0047,  1 },  // (First char = [0x0047, G], Second char = [0x002D, hyphen], Kerning dist = 1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x004F,  1 },  // (First char = [0x004F, O], Second char = [0x002D, hyphen], Kerning dist = 1)
    { 0x0050,  1 },  // (First char = [0x0050, P], Second char = [0x002D, hyphen], Kerning dist = 1)
    { 0x0053,  1 },  // (First char = [0x0053, S], Second char = [0x002D, hyphen], Kerning dist = 1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x002D, hyphen], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x002D, hyphen], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x002D, hyphen], Kerning dist = -3)
    { 0x0043,  1 },  // (First char = [0x0043, C], Second char = [0x003F, question], Kerning dist = 1)
    { 0x0046,  1 },  // (First char = [0x0046, F], Second char = [0x003F, question], Kerning dist = 1)
    { 0x004B,  1 },  // (First char = [0x004B, K], Second char = [0x003F, question], Kerning dist = 1)
    { 0x0054,  1 },  // (First char = [0x0054, T], Second char = [0x003F, question], Kerning dist = 1)
    { 0x0056,  1 },  // (First char = [0x0056, V], Second char = [0x003F, question], Kerning dist = 1)
    { 0x0059,  1 },  // (First char = [0x0059, Y], Second char = [0x003F, question], Kerning dist = 1)
    { 0x0043,  1 },  // (First char = [0x0043, C], Second char = [0x0041, A], Kerning dist = 1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0047,  1 },  // (First char = [0x0047, G], Second char = [0x0041, A], Kerning dist = 1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0041, A], Kerning dist = -3)
    { 0x002D,  1 },  // (First char = [0x002D, hyphen], Second char = [0x0043, C], Kerning dist = 1)
    { 0x0043,  1 },  // (First char = [0x0043, C], Second char = [0x0043, C], Kerning dist = 1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0050,  1 },  // (First char = [0x0050, P], Second char = [0x0043, C], Kerning dist = 1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0043, C], Kerning dist = -1)
    { 0x002D,  1 },  // (First char = [0x002D, hyphen], Second char = [0x0047, G], Kerning dist = 1)
    { 0x0043,  1 },  // (First char = [0x0043, C], Second char = [0x0047, G], Kerning dist = 1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0050,  1 },  // (First char = [0x0050, P], Second char = [0x0047, G], Kerning dist = 1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0047, G], Kerning dist = -1)
    { 0x002D,  1 },  // (First char = [0x002D, hyphen], Second char = [0x004F, O], Kerning dist = 1)
    { 0x0043,  1 },  // (First char = [0x0043, C], Second char = [0x004F, O], Kerning dist = 1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0050,  1 },  // (First char = [0x0050, P], Second char = [0x004F, O], Kerning dist = 1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0043,  2 },  // (First char = [0x0043, C], Second char = [0x0053, S], Kerning dist = 2)
    { 0x0046,  1 },  // (First char = [0x0046, F], Second char = [0x0053, S], Kerning dist = 1)
    { 0x0050,  1 },  // (First char = [0x0050, P], Second char = [0x0053, S], Kerning dist = 1)
    { 0x0052,  1 },  // (First char = [0x0052, R], Second char = [0x0053, S], Kerning dist = 1)
    { 0x0054,  1 },  // (First char = [0x0054, T], Second char = [0x0053, S], Kerning dist = 1)
    { 0x002D, -3 },  // (First char = [0x002D, hyphen], Second char = [0x0054, T], Kerning dist = -3)
    { 0x0043,  1 },  // (First char = [0x0043, C], Second char = [0x0054, T], Kerning dist = 1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0054, T], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0050,  1 },  // (First char = [0x0050, P], Second char = [0x0054, T], Kerning dist = 1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0054,  1 },  // (First char = [0x0054, T], Second char = [0x0054, T], Kerning dist = 1)
    { 0x002D, -2 },  // (First char = [0x002D, hyphen], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0043,  1 },  // (First char = [0x0043, C], Second char = [0x0056, V], Kerning dist = 1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0056, V], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0050,  1 },  // (First char = [0x0050, P], Second char = [0x0056, V], Kerning dist = 1)
    { 0x002D, -3 },  // (First char = [0x002D, hyphen], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0043,  1 },  // (First char = [0x0043, C], Second char = [0x0059, Y], Kerning dist = 1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0059, Y], Kerning dist = -1)
};
